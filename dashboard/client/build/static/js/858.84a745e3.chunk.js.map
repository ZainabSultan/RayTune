{"version":3,"file":"static/js/858.84a745e3.chunk.js","mappings":"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","sources":["common/DurationText/DurationText.tsx","common/constants.ts","components/Loading.tsx","components/SearchComponent.tsx","components/Tooltip.tsx","components/ProgressBar/ProgressBar.tsx","pages/job/TaskProgressBar.tsx","pages/job/hook/useJobProgress.ts","pages/job/JobRow.tsx","pages/job/index.tsx","pages/job/hook/useJobList.ts","service/job.ts","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/icons/HelpOutline.js"],"sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport React, { useEffect, useState } from \"react\";\n\ntype DurationTextProps = {\n  startTime: Date | number;\n  endTime?: Date | number | null;\n};\n\n/**\n * Component that shows an incrementing duration text.\n * This component will smartly rerender more often depending on the size of the duration.\n */\nexport const DurationText = ({ startTime, endTime }: DurationTextProps) => {\n  // Increments to force a re-render.\n  const [, setRerenderCounter] = useState(0);\n\n  // Assume current time, if end time is nullish\n  const endTimeToRender = endTime ? endTime : new Date();\n  const duration = dayjs.duration(\n    dayjs(endTimeToRender).diff(dayjs(startTime)),\n  );\n\n  let durationText: string;\n  let refreshInterval = 1000;\n  if (duration.asMinutes() < 1) {\n    durationText = duration.format(\"s[s]\");\n  } else if (duration.asHours() < 1) {\n    durationText = duration.format(\"m[m] s[s]\");\n  } else if (duration.asDays() < 1) {\n    // Only refresh once per minute\n    durationText = duration.format(\"H[h] m[m]\");\n    refreshInterval = 1000 * 60;\n  } else if (duration.asMonths() < 1) {\n    // Only refresh once per minute\n    durationText = duration.format(\"D[d] H[h]\");\n    refreshInterval = 1000 * 60;\n  } else if (duration.asYears() < 1) {\n    // Only refresh once per hour\n    durationText = duration.format(\"M[M] D[d]\");\n    refreshInterval = 1000 * 60 * 60;\n  } else {\n    // Only refresh once per hour\n    durationText = duration.format(\"Y[y] M[M] D[d]\");\n    refreshInterval = 1000 * 60 * 60;\n  }\n\n  useEffect(() => {\n    if (!endTime) {\n      // Only refresh if this is running job\n      const timeout = setInterval(() => {\n        setRerenderCounter((counter) => counter + 1);\n      }, refreshInterval);\n      return () => {\n        clearInterval(timeout);\n      };\n    }\n  }, [endTime, refreshInterval]);\n\n  return <Typography>{durationText}</Typography>;\n};\n","export const API_REFRESH_INTERVAL_MS = 4000;\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Loading = ({ loading }: { loading: boolean }) => (\n  <Backdrop open={loading} style={{ zIndex: 100 }}>\n    <CircularProgress color=\"primary\" />\n  </Backdrop>\n);\n\nexport default Loading;\n","import {\n  InputAdornment,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    margin: theme.spacing(1),\n    marginTop: 0,\n  },\n}));\n\nexport const SearchInput = ({\n  label,\n  onChange,\n  defaultValue,\n}: {\n  label: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      InputProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value);\n          }\n        },\n        defaultValue,\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchOutlined />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport const SearchSelect = ({\n  label,\n  onChange,\n  options,\n}: {\n  label: string;\n  onChange?: (value: string) => void;\n  options: (string | [string, string])[];\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      select\n      SelectProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value as string);\n          }\n        },\n        style: {\n          width: 100,\n        },\n      }}\n    >\n      <MenuItem value=\"\">All</MenuItem>\n      {options.map((e) =>\n        typeof e === \"string\" ? (\n          <MenuItem value={e}>{e}</MenuItem>\n        ) : (\n          <MenuItem value={e[0]}>{e[1]}</MenuItem>\n        ),\n      )}\n    </TextField>\n  );\n};\n","import {\n  createStyles,\n  makeStyles,\n  Tooltip,\n  TooltipProps,\n} from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport React, { ReactNode } from \"react\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      border: \"1px solid #dadde9\",\n      color: theme.palette.text.primary,\n      padding: theme.spacing(1.5),\n    },\n  }),\n);\n\nexport const StyledTooltip = (props: TooltipProps) => {\n  const classes = useStyles();\n\n  return <Tooltip classes={{ tooltip: classes.root }} {...props} />;\n};\n\nconst useHelpInfoStyles = makeStyles((theme) =>\n  createStyles({\n    helpIcon: {\n      color: theme.palette.grey[500],\n    },\n  }),\n);\n\ntype HelpInfoProps = {\n  children: NonNullable<ReactNode>;\n  className?: string;\n};\n\nexport const HelpInfo = ({ children, className }: HelpInfoProps) => {\n  const classes = useHelpInfoStyles();\n\n  return (\n    <StyledTooltip className={className} interactive title={children}>\n      <HelpOutlineIcon fontSize=\"small\" className={classes.helpIcon} />\n    </StyledTooltip>\n  );\n};\n","import {\n  createStyles,\n  makeStyles,\n  Paper,\n  TooltipProps,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { StyledTooltip } from \"../Tooltip\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    legendRoot: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginBottom: theme.spacing(2),\n    },\n    legendItemContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"center\",\n      \"&:not(:first-child)\": {\n        marginLeft: theme.spacing(1.5),\n      },\n      \"&:not(:last-child)\": {\n        marginRight: theme.spacing(1.5),\n      },\n    },\n    colorLegend: {\n      width: 16,\n      height: 16,\n      borderRadius: 4,\n      marginRight: theme.spacing(1),\n    },\n    progressBarRoot: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      width: \"100%\",\n      height: 8,\n      backgroundColor: \"white\",\n      borderRadius: 6,\n      overflow: \"hidden\",\n    },\n    segment: {\n      \"&:not(:last-child)\": {\n        marginRight: 1,\n      },\n    },\n  }),\n);\n\nexport type ProgressBarSegment = {\n  /**\n   * Number of items in this segment\n   */\n  value: number;\n  /**\n   * Name of this segment\n   */\n  label: string;\n  /**\n   * A CSS color used to represent the segment.\n   */\n  color: string;\n};\n\nexport type ProgressBarProps = {\n  /**\n   * The different segments to the progress bar.\n   * The order determines the order of which we show the segments on the page.\n   * Ex: [Succeeded: 5, Running: 2, Pending: 10]\n   */\n  progress: ProgressBarSegment[];\n  /**\n   * The expected total number of items. If not provided, we calculate the total\n   * from the sum of the segments.\n   *\n   * If the sum of the values from each segment is less than total, then we create\n   * an additional segment for unaccounted items. This additional segment is placed\n   * at the end.\n   */\n  total?: number;\n  /**\n   * Label for unaccounted for items i.e. items that are not part of a `progress` segment.\n   */\n  unaccountedLabel?: string;\n  /**\n   * Whether a legend is shown. Default to true.\n   */\n  showLegend?: boolean;\n  /**\n   * Whether to show the a legend as a tooltip.\n   */\n  showTooltip?: boolean;\n};\n\nexport const ProgressBar = ({\n  progress,\n  total,\n  unaccountedLabel,\n  showLegend = true,\n  showTooltip = false,\n}: ProgressBarProps) => {\n  const classes = useStyles();\n  const segmentTotal = progress.reduce((acc, { value }) => acc + value, 0);\n  const finalTotal = total ?? segmentTotal;\n\n  // TODO(aguo): Handle total being > segmentTotal\n  const segments =\n    segmentTotal < finalTotal\n      ? [\n          ...progress,\n          {\n            value: finalTotal - segmentTotal,\n            label: unaccountedLabel ?? \"unaccounted\",\n            color: \"#EEEEEE\",\n          },\n        ]\n      : progress;\n\n  const filteredSegments = segments.filter(({ value }) => value);\n\n  return (\n    <div className={classes.root}>\n      {showLegend && (\n        <div className={classes.legendRoot}>\n          <div className={classes.legendItemContainer}>\n            <div\n              className={classes.colorLegend}\n              style={{ backgroundColor: \"black\" }}\n            />\n            <Typography>Total: {finalTotal}</Typography>\n          </div>\n          {filteredSegments.map(({ value, label, color }) => (\n            <div key={label} className={classes.legendItemContainer}>\n              <div\n                className={classes.colorLegend}\n                style={{ backgroundColor: color }}\n              />\n              <Typography>\n                {label}: {value}\n              </Typography>\n            </div>\n          ))}\n        </div>\n      )}\n      <LegendTooltip\n        showTooltip={showTooltip}\n        total={finalTotal}\n        segments={filteredSegments}\n      >\n        <div\n          className={classes.progressBarRoot}\n          style={{\n            backgroundColor: segmentTotal === 0 ? \"lightGrey\" : \"white\",\n          }}\n        >\n          {filteredSegments.map(({ color, label, value }) => (\n            <span\n              key={label}\n              className={classes.segment}\n              style={{\n                flex: value,\n                backgroundColor: color,\n              }}\n              data-testid=\"progress-bar-segment\"\n            />\n          ))}\n        </div>\n      </LegendTooltip>\n    </div>\n  );\n};\n\nconst useLegendStyles = makeStyles((theme) =>\n  createStyles({\n    legendItemContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"center\",\n      \"&:not(:first-child)\": {\n        marginTop: theme.spacing(1),\n      },\n    },\n    colorLegend: {\n      width: 16,\n      height: 16,\n      borderRadius: 4,\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n\ntype LegendTooltipProps = {\n  showTooltip: boolean;\n  segments: ProgressBarSegment[];\n  total: number;\n  children: TooltipProps[\"children\"];\n};\n\nconst LegendTooltip = ({\n  showTooltip,\n  segments,\n  total,\n  children,\n}: LegendTooltipProps) => {\n  const classes = useLegendStyles();\n\n  if (showTooltip) {\n    return (\n      <StyledTooltip\n        placement=\"right\"\n        title={\n          <Paper>\n            <div className={classes.legendItemContainer}>\n              <div\n                className={classes.colorLegend}\n                style={{ backgroundColor: \"black\" }}\n              />\n              <Typography>Total: {total}</Typography>\n            </div>\n            {segments.map(({ value, label, color }) => (\n              <div key={label} className={classes.legendItemContainer}>\n                <div\n                  className={classes.colorLegend}\n                  style={{ backgroundColor: color }}\n                />\n                <Typography>\n                  {label}: {value}\n                </Typography>\n              </div>\n            ))}\n          </Paper>\n        }\n      >\n        {children}\n      </StyledTooltip>\n    );\n  }\n\n  return children;\n};\n","import { Theme } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { ProgressBar, ProgressBarSegment } from \"../../components/ProgressBar\";\nimport { TaskProgress } from \"../../type/job\";\n\nexport type TaskProgressBarProps = TaskProgress & {\n  showAsComplete?: boolean;\n  showTooltip?: boolean;\n};\n\nexport const TaskProgressBar = ({\n  numFinished = 0,\n  numRunning = 0,\n  numPendingArgsAvail = 0,\n  numPendingNodeAssignment = 0,\n  numSubmittedToWorker = 0,\n  numFailed = 0,\n  numUnknown = 0,\n  showAsComplete = false,\n  showTooltip = true,\n}: TaskProgressBarProps) => {\n  const theme = useTheme<Theme>();\n  if (showAsComplete) {\n    const total =\n      numFinished +\n      numRunning +\n      numPendingArgsAvail +\n      numPendingNodeAssignment +\n      numSubmittedToWorker +\n      numFailed +\n      numUnknown;\n    return (\n      <ProgressBar\n        progress={[\n          {\n            label: \"Finished\",\n            value: total - numFailed,\n            color: theme.palette.success.main,\n          },\n          {\n            label: \"Failed\",\n            value: numFailed,\n            color: theme.palette.error.main,\n          },\n        ]}\n        showTooltip={showTooltip}\n      />\n    );\n  } else {\n    const progress: ProgressBarSegment[] = [\n      {\n        label: \"Finished\",\n        value: numFinished,\n        color: theme.palette.success.main,\n      },\n      {\n        label: \"Failed\",\n        value: numFailed,\n        color: theme.palette.error.main,\n      },\n      {\n        label: \"Running\",\n        value: numRunning,\n        color: theme.palette.primary.main,\n      },\n      {\n        label: \"Waiting for scheduling\",\n        value: numPendingNodeAssignment + numSubmittedToWorker,\n        color: \"#cfcf08\",\n      },\n      {\n        label: \"Waiting for dependencies\",\n        value: numPendingArgsAvail,\n        color: \"#f79e02\",\n      },\n      {\n        label: \"Unknown\",\n        value: numUnknown,\n        color: \"#5f6469\",\n      },\n    ];\n    return <ProgressBar progress={progress} />;\n  }\n};\n\nexport type MiniTaskProgressBarProps = TaskProgress & {\n  /**\n   * Whether to color the entire progress bar as complete.\n   * For example, when the job is complete.\n   */\n  showAsComplete?: boolean;\n  /**\n   * Whether to show tooltip.\n   */\n  showTooltip?: boolean;\n};\n\nexport const MiniTaskProgressBar = ({\n  numFinished = 0,\n  numRunning = 0,\n  numPendingArgsAvail = 0,\n  numPendingNodeAssignment = 0,\n  numSubmittedToWorker = 0,\n  numUnknown = 0,\n  numFailed = 0,\n  showAsComplete = false,\n  showTooltip = true,\n}: MiniTaskProgressBarProps) => {\n  const theme = useTheme<Theme>();\n  if (showAsComplete) {\n    const total =\n      numFinished +\n      numRunning +\n      numPendingArgsAvail +\n      numPendingNodeAssignment +\n      numSubmittedToWorker +\n      numFailed +\n      numUnknown;\n    return (\n      <ProgressBar\n        progress={[\n          {\n            label: \"Finished\",\n            value: total - numFailed,\n            color: theme.palette.success.main,\n          },\n          {\n            label: \"Failed\",\n            value: numFailed,\n            color: theme.palette.error.main,\n          },\n        ]}\n        showLegend={false}\n        showTooltip={showTooltip}\n      />\n    );\n  } else {\n    const progress: ProgressBarSegment[] = [\n      {\n        label: \"Finished\",\n        value: numFinished,\n        color: theme.palette.success.main,\n      },\n      {\n        label: \"Failed\",\n        value: numFailed,\n        color: theme.palette.error.main,\n      },\n      {\n        label: \"Running\",\n        value: numRunning,\n        color: theme.palette.primary.main,\n      },\n      {\n        label: \"Waiting for scheduling\",\n        value: numPendingNodeAssignment + numSubmittedToWorker,\n        color: \"#cfcf08\",\n      },\n      {\n        label: \"Waiting for dependencies\",\n        value: numPendingArgsAvail,\n        color: \"#f79e02\",\n      },\n      {\n        label: \"Unknown\",\n        value: numUnknown,\n        color: \"#5f6469\",\n      },\n    ];\n    return (\n      <ProgressBar\n        progress={progress}\n        showLegend={false}\n        showTooltip={showTooltip}\n      />\n    );\n  }\n};\n","import _ from \"lodash\";\nimport { useRef, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { API_REFRESH_INTERVAL_MS } from \"../../../common/constants\";\nimport { getJobProgress, getJobProgressByTaskName } from \"../../../service/job\";\n\n/**\n * Hook for fetching a job's task progress.\n * Refetches every 4 seconds unless refresh switch is toggled off.\n *\n * If jobId is not provided, will fetch the task progress across all jobs.\n * @param jobId The id of the job whose task progress to fetch or undefined\n *              to fetch all progress for all jobs\n */\nexport const useJobProgress = (jobId?: string) => {\n  const [msg, setMsg] = useState(\"Loading progress...\");\n  const [error, setError] = useState(false);\n  const [isRefreshing, setRefresh] = useState(true);\n  const refreshRef = useRef(isRefreshing);\n  const onSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  refreshRef.current = isRefreshing;\n  const { data: progress } = useSWR(\n    jobId ? [\"useJobProgress\", jobId] : null,\n    async (_, jobId) => {\n      const rsp = await getJobProgress(jobId);\n\n      setMsg(rsp.data.msg);\n      if (rsp.data.result) {\n        return rsp.data.data.detail;\n      } else {\n        setError(true);\n        setRefresh(false);\n      }\n    },\n    { refreshInterval: isRefreshing ? API_REFRESH_INTERVAL_MS : 0 },\n  );\n\n  const driverExists = !jobId ? false : true;\n  return {\n    progress,\n    msg,\n    error,\n    isRefreshing,\n    onSwitchChange,\n    driverExists,\n  };\n};\n\n/**\n * Hook for fetching a job's task progress grouped by task name.\n * Refetches every 4 seconds unless refresh switch is toggled off.\n *\n * If jobId is not provided, will fetch the task progress across all jobs.\n * @param jobId The id of the job whose task progress to fetch or undefined\n *              to fetch all progress for all jobs\n */\nexport const useJobProgressByTaskName = (jobId: string) => {\n  const [page, setPage] = useState(1);\n  const [msg, setMsg] = useState(\"Loading progress...\");\n  const [error, setError] = useState(false);\n  const [isRefreshing, setRefresh] = useState(true);\n  const refreshRef = useRef(isRefreshing);\n  const onSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  refreshRef.current = isRefreshing;\n\n  const { data: progress } = useSWR(\n    [\"useJobProgressByTaskName\", jobId],\n    async (_, jobId) => {\n      const rsp = await getJobProgressByTaskName(jobId);\n      setMsg(rsp.data.msg);\n\n      if (rsp.data.result) {\n        return rsp.data.data.detail;\n      } else {\n        setError(true);\n        setRefresh(false);\n      }\n    },\n    { refreshInterval: isRefreshing ? API_REFRESH_INTERVAL_MS : 0 },\n  );\n\n  const tasks = progress?.tasks ?? [];\n  const tasksWithTotals = tasks.map((task) => {\n    const {\n      numFailed = 0,\n      numPendingArgsAvail = 0,\n      numPendingNodeAssignment = 0,\n      numRunning = 0,\n      numSubmittedToWorker = 0,\n      numFinished = 0,\n    } = task.progress;\n\n    const numActive =\n      numPendingArgsAvail +\n      numPendingNodeAssignment +\n      numRunning +\n      numSubmittedToWorker;\n\n    return { ...task, numFailed, numActive, numFinished };\n  });\n  const sortedTasks = _.orderBy(\n    tasksWithTotals,\n    [\"numFailed\", \"numActive\", \"numFinished\"],\n    [\"desc\", \"desc\", \"desc\"],\n  );\n  const paginatedTasks = sortedTasks.slice((page - 1) * 10, page * 10);\n\n  return {\n    progress: paginatedTasks,\n    page: { pageNo: page, pageSize: 10 },\n    total: tasks.length,\n    setPage,\n    msg,\n    error,\n    isRefreshing,\n    onSwitchChange,\n  };\n};\n","import { TableCell, TableRow, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport dayjs from \"dayjs\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../../App\";\nimport { DurationText } from \"../../common/DurationText\";\nimport { UnifiedJob } from \"../../type/job\";\nimport { useJobProgress } from \"./hook/useJobProgress\";\nimport { MiniTaskProgressBar } from \"./TaskProgressBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  overflowCell: {\n    display: \"block\",\n    width: \"150px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n}));\n\ntype JobRowProps = {\n  job: UnifiedJob;\n};\n\nexport const JobRow = ({\n  job: {\n    job_id,\n    submission_id,\n    driver_info,\n    type,\n    status,\n    start_time,\n    end_time,\n    entrypoint,\n  },\n}: JobRowProps) => {\n  const { ipLogMap } = useContext(GlobalContext);\n  const { progress, error, driverExists } = useJobProgress(job_id ?? undefined);\n  const classes = useStyles();\n\n  const progressBar = (() => {\n    if (!driverExists) {\n      return <MiniTaskProgressBar />;\n    }\n    if (!progress || error) {\n      return \"unavailable\";\n    }\n    if (status === \"SUCCEEDED\" || status === \"FAILED\") {\n      // TODO(aguo): Show failed tasks in progress bar once supported.\n      return <MiniTaskProgressBar {...progress} showAsComplete />;\n    } else {\n      return <MiniTaskProgressBar {...progress} />;\n    }\n  })();\n\n  return (\n    <TableRow>\n      <TableCell align=\"center\">\n        {job_id ? <Link to={`/job/${job_id}`}>{job_id}</Link> : \"-\"}\n      </TableCell>\n      <TableCell align=\"center\">{submission_id ?? \"-\"}</TableCell>\n      <TableCell align=\"center\">\n        <Tooltip\n          className={classes.overflowCell}\n          title={entrypoint}\n          arrow\n          interactive\n        >\n          <div>{entrypoint}</div>\n        </Tooltip>\n      </TableCell>\n      <TableCell align=\"center\">{status}</TableCell>\n      <TableCell align=\"center\">\n        {start_time && start_time > 0 ? (\n          <DurationText startTime={start_time} endTime={end_time} />\n        ) : (\n          \"-\"\n        )}\n      </TableCell>\n      <TableCell align=\"center\">{progressBar}</TableCell>\n      <TableCell align=\"center\">\n        {/* TODO(aguo): Also show logs for the job id instead\n      of just the submission's logs */}\n        {driver_info && ipLogMap[driver_info.node_ip_address] ? (\n          <Link\n            to={`/log/${encodeURIComponent(\n              ipLogMap[driver_info.node_ip_address],\n            )}?fileName=${\n              type === \"DRIVER\" ? job_id : `driver-${submission_id}`\n            }`}\n            target=\"_blank\"\n          >\n            Log\n          </Link>\n        ) : (\n          \"-\"\n        )}\n      </TableCell>\n      <TableCell align=\"center\">\n        {dayjs(Number(start_time)).format(\"YYYY/MM/DD HH:mm:ss\")}\n      </TableCell>\n      <TableCell align=\"center\">\n        {end_time && end_time > 0\n          ? dayjs(Number(end_time)).format(\"YYYY/MM/DD HH:mm:ss\")\n          : \"-\"}\n      </TableCell>\n      <TableCell align=\"center\">{driver_info?.pid ?? \"-\"}</TableCell>\n    </TableRow>\n  );\n};\n","import {\n  Box,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport React from \"react\";\nimport Loading from \"../../components/Loading\";\nimport { SearchInput } from \"../../components/SearchComponent\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { HelpInfo } from \"../../components/Tooltip\";\nimport { useJobList } from \"./hook/useJobList\";\nimport { JobRow } from \"./JobRow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  progressError: {\n    marginTop: theme.spacing(1),\n  },\n  helpInfo: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst columns = [\n  { label: \"Job ID\" },\n  { label: \"Submission ID\" },\n  { label: \"Entrypoint\" },\n  { label: \"Status\" },\n  { label: \"Duration\" },\n  {\n    label: \"Tasks\",\n    helpInfo: (\n      <Typography>\n        The progress of the all submitted tasks per job. Tasks that are not yet\n        submitted will not show up in the progress bar.\n        <br />\n        <br />\n        Note: This column requires that prometheus is running. See{\" \"}\n        <a href=\"https://docs.ray.io/en/latest/ray-observability/ray-metrics.html#exporting-metrics\">\n          here\n        </a>{\" \"}\n        for instructions.\n      </Typography>\n    ),\n  },\n  {\n    label: \"Logs\",\n  },\n  { label: \"StartTime\" },\n  { label: \"EndTime\" },\n  { label: \"Driver Pid\" },\n];\n\nconst JobList = () => {\n  const classes = useStyles();\n  const {\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    jobList,\n    changeFilter,\n    page,\n    setPage,\n  } = useJobList();\n\n  return (\n    <div className={classes.root}>\n      <Loading loading={msg.startsWith(\"Loading\")} />\n      <TitleCard title=\"JOBS\">\n        Auto Refresh:\n        <Switch\n          checked={isRefreshing}\n          onChange={(event) => {\n            onSwitchChange(event);\n          }}\n          name=\"refresh\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n        <br />\n        Request Status: {msg}\n      </TitleCard>\n      <TitleCard title=\"Job List\">\n        <TableContainer>\n          <SearchInput\n            label=\"Job ID\"\n            onChange={(value) => changeFilter(\"job_id\", value)}\n          />\n          <SearchInput\n            label=\"Page Size\"\n            onChange={(value) =>\n              setPage(\"pageSize\", Math.min(Number(value), 500) || 10)\n            }\n          />\n          <div>\n            <Pagination\n              count={Math.ceil(jobList.length / page.pageSize)}\n              page={page.pageNo}\n              onChange={(e, pageNo) => setPage(\"pageNo\", pageNo)}\n            />\n          </div>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map(({ label, helpInfo }) => (\n                  <TableCell align=\"center\" key={label}>\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      {label}\n                      {helpInfo && (\n                        <HelpInfo className={classes.helpInfo}>\n                          {helpInfo}\n                        </HelpInfo>\n                      )}\n                    </Box>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {jobList\n                .slice(\n                  (page.pageNo - 1) * page.pageSize,\n                  page.pageNo * page.pageSize,\n                )\n                .map((job, index) => {\n                  const { job_id, submission_id } = job;\n                  return (\n                    <JobRow key={job_id ?? submission_id ?? index} job={job} />\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default JobList;\n","import { useContext, useRef, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { GlobalContext } from \"../../../App\";\nimport { API_REFRESH_INTERVAL_MS } from \"../../../common/constants\";\nimport { getJobList } from \"../../../service/job\";\n\nexport const useJobList = () => {\n  const [page, setPage] = useState({ pageSize: 10, pageNo: 1 });\n  const [msg, setMsg] = useState(\"Loading the job list...\");\n  const [isRefreshing, setRefresh] = useState(true);\n  const { ipLogMap } = useContext(GlobalContext);\n  const [filter, setFilter] = useState<\n    {\n      key: \"job_id\" | \"status\";\n      val: string;\n    }[]\n  >([]);\n  const refreshRef = useRef(isRefreshing);\n  const changeFilter = (key: \"job_id\" | \"status\", val: string) => {\n    const f = filter.find((e) => e.key === key);\n    if (f) {\n      f.val = val;\n    } else {\n      filter.push({ key, val });\n    }\n    setFilter([...filter]);\n  };\n  const onSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  refreshRef.current = isRefreshing;\n\n  const { data } = useSWR(\n    \"useJobList\",\n    async () => {\n      const rsp = await getJobList();\n\n      if (rsp) {\n        setMsg(\"Fetched jobs\");\n        return rsp.data.sort(\n          (a, b) => (b.start_time ?? 0) - (a.start_time ?? 0),\n        );\n      }\n    },\n    { refreshInterval: isRefreshing ? API_REFRESH_INTERVAL_MS : 0 },\n  );\n\n  const jobList = data ?? [];\n\n  return {\n    jobList: jobList.filter((node) =>\n      filter.every((f) => node[f.key] && (node[f.key] ?? \"\").includes(f.val)),\n    ),\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    changeFilter,\n    page,\n    originalJobs: jobList,\n    setPage: (key: string, val: number) => setPage({ ...page, [key]: val }),\n    ipLogMap,\n  };\n};\n","import {\n  JobListRsp,\n  JobProgressByTaskNameRsp,\n  JobProgressRsp,\n  UnifiedJob,\n} from \"../type/job\";\nimport { get } from \"./requestHandlers\";\n\nexport const getJobList = () => {\n  return get<JobListRsp>(\"api/jobs/\");\n};\n\nexport const getJobDetail = (id: string) => {\n  return get<UnifiedJob>(`api/jobs/${id}`);\n};\n\nexport const getJobProgress = (jobId?: string) => {\n  const jobIdQuery = jobId ? `?job_id=${jobId}` : \"\";\n  return get<JobProgressRsp>(`api/progress${jobIdQuery}`);\n};\n\nexport const getJobProgressByTaskName = (jobId: string) => {\n  return get<JobProgressByTaskNameRsp>(\n    `api/progress_by_task_name?job_id=${jobId}`,\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');\n\nexports.default = _default;"],"names":["DurationText","durationText","startTime","endTime","useState","setRerenderCounter","endTimeToRender","Date","duration","dayjs","diff","refreshInterval","asMinutes","format","asHours","asDays","asMonths","asYears","useEffect","timeout","setInterval","counter","clearInterval","Typography","API_REFRESH_INTERVAL_MS","loading","open","style","zIndex","color","useStyles","makeStyles","theme","search","margin","spacing","marginTop","SearchInput","label","onChange","defaultValue","classes","className","size","InputProps","value","target","endAdornment","position","SearchSelect","options","select","SelectProps","width","map","e","createStyles","root","backgroundColor","palette","background","paper","border","text","primary","padding","StyledTooltip","props","tooltip","useHelpInfoStyles","helpIcon","grey","HelpInfo","children","interactive","title","fontSize","display","flexDirection","legendRoot","marginBottom","legendItemContainer","flexWrap","alignItems","marginLeft","marginRight","colorLegend","height","borderRadius","progressBarRoot","overflow","segment","ProgressBar","progress","total","unaccountedLabel","showLegend","showTooltip","segmentTotal","reduce","acc","finalTotal","filteredSegments","filter","LegendTooltip","segments","flex","useLegendStyles","placement","Paper","TaskProgressBar","numFinished","numRunning","numPendingArgsAvail","numPendingNodeAssignment","numSubmittedToWorker","numFailed","numUnknown","showAsComplete","useTheme","success","main","error","MiniTaskProgressBar","useJobProgress","jobId","msg","setMsg","setError","isRefreshing","setRefresh","useRef","current","useSWR","_","getJobProgress","rsp","data","result","detail","onSwitchChange","event","checked","driverExists","useJobProgressByTaskName","page","setPage","getJobProgressByTaskName","tasks","tasksWithTotals","task","numActive","slice","pageNo","pageSize","length","overflowCell","textOverflow","whiteSpace","JobRow","job","job_id","submission_id","driver_info","type","status","start_time","end_time","entrypoint","ipLogMap","useContext","GlobalContext","undefined","progressBar","TableRow","TableCell","align","to","arrow","node_ip_address","encodeURIComponent","Number","pid","progressError","helpInfo","columns","href","setFilter","getJobList","sort","a","b","jobList","node","every","f","key","includes","val","changeFilter","find","push","originalJobs","useJobList","Loading","startsWith","TitleCard","Switch","name","inputProps","TableContainer","Math","min","Pagination","count","ceil","Table","TableHead","Box","justifyContent","TableBody","index","get","getJobDetail","id","jobIdQuery","SwitchBase","React","ref","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","disabled","icon","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","role","input","newChecked","withStyles","cursor","opacity","top","left","_props$color","_props$edge","edge","_props$size","thumb","edgeStart","edgeEnd","concat","capitalize","switchBase","track","boxSizing","flexShrink","verticalAlign","colorAdjust","transition","transitions","create","shortest","transform","colorPrimary","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","_interopRequireDefault","require","_interopRequireWildcard","exports","_default","createElement","d"],"sourceRoot":""}